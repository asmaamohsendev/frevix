{
  "info": {
    "name": "Vync Auth Service API",
    "description": "Comprehensive API collection for Vync Auth Service with cache and rate limiting",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_email",
      "value": "test@example.com",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.collectionVariables.set('user_email', response.user.email);",
                  "    pm.test('Registration successful', () => {",
                  "        pm.expect(response.user).to.have.property('id');",
                  "        pm.expect(response.token).to.be.a('string');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123\",\n  \"role\": \"CLIENT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user with role-based profile creation"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response.user).to.have.property('id');",
                  "        pm.expect(response.token).to.be.a('string');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate user and create session"
          }
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout user and blacklist token"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "forgot-password"]
            },
            "description": "Request password reset OTP"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"NewSecurePassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "reset-password"]
            },
            "description": "Reset password using OTP"
          }
        }
      ],
      "description": "User authentication endpoints including registration, login, logout, and password reset"
    },
    {
      "name": "Token Management",
      "item": [
        {
          "name": "Verify Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/verify-token",
              "host": ["{{baseUrl}}"],
              "path": ["verify-token"]
            },
            "description": "Verify JWT token validity (used by other services)"
          }
        }
      ],
      "description": "Token verification for inter-service communication"
    },
    {
      "name": "OTP Management",
      "item": [
        {
          "name": "Request OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"type\": \"EMAIL_VERIFICATION\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/otp/request",
              "host": ["{{baseUrl}}"],
              "path": ["otp", "request"]
            },
            "description": "Request OTP for various purposes"
          }
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"otp\": \"123456\",\n  \"type\": \"EMAIL_VERIFICATION\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/otp/verify",
              "host": ["{{baseUrl}}"],
              "path": ["otp", "verify"]
            },
            "description": "Verify OTP code"
          }
        }
      ],
      "description": "One-Time Password management for email verification and security"
    },
    {
      "name": "Client Profile",
      "item": [
        {
          "name": "Get Client Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/client/profile",
              "host": ["{{baseUrl}}"],
              "path": ["client", "profile"]
            },
            "description": "Get current user's client profile"
          }
        },
        {
          "name": "Update Client Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"companyName\": \"Acme Corporation\",\n  \"industry\": \"Technology\",\n  \"description\": \"Leading technology company\",\n  \"website\": \"https://acme.com\",\n  \"address\": \"123 Main St, City, Country\",\n  \"phoneNumber\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/client/profile",
              "host": ["{{baseUrl}}"],
              "path": ["client", "profile"]
            },
            "description": "Update current user's client profile"
          }
        }
      ],
      "description": "Client profile management endpoints"
    },
    {
      "name": "Freelancer Profile",
      "item": [
        {
          "name": "Get Freelancer Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/freelancer/profile",
              "host": ["{{baseUrl}}"],
              "path": ["freelancer", "profile"]
            },
            "description": "Get current user's freelancer profile"
          }
        },
        {
          "name": "Update Freelancer Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bio\": \"Full-stack developer with 5+ years of experience\",\n  \"hourlyRate\": 75.00,\n  \"experienceLevel\": \"SENIOR\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/freelancer/profile",
              "host": ["{{baseUrl}}"],
              "path": ["freelancer", "profile"]
            },
            "description": "Update current user's freelancer profile"
          }
        }
      ],
      "description": "Freelancer profile management endpoints"
    },
    {
      "name": "OAuth",
      "item": [
        {
          "name": "Google OAuth Login",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/oauth/google?redirect_uri=http://localhost:3000/auth/callback",
              "host": ["{{baseUrl}}"],
              "path": ["oauth", "google"],
              "query": [
                {
                  "key": "redirect_uri",
                  "value": "http://localhost:3000/auth/callback"
                }
              ]
            },
            "description": "Initiate Google OAuth flow"
          }
        }
      ],
      "description": "OAuth authentication with external providers"
    },
    {
      "name": "Monitoring",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Basic health check"
          }
        },
        {
          "name": "Detailed Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/monitoring/health/detailed",
              "host": ["{{baseUrl}}"],
              "path": ["monitoring", "health", "detailed"]
            },
            "description": "Comprehensive system metrics and health status"
          }
        },
        {
          "name": "Metrics Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/monitoring/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["monitoring", "dashboard"]
            },
            "description": "Dashboard metrics summary"
          }
        },
        {
          "name": "Prometheus Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/monitoring/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["monitoring", "metrics"]
            },
            "description": "Prometheus formatted metrics"
          }
        }
      ],
      "description": "System monitoring and health check endpoints"
    },
    {
      "name": "Rate Limiting Tests",
      "item": [
        {
          "name": "Test Login Rate Limit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Test rate limiting on login endpoint - run this multiple times to trigger rate limit"
          }
        },
        {
          "name": "Test Registration Rate Limit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Rate Test\",\n  \"email\": \"rate.test@example.com\",\n  \"password\": \"TestPassword123\",\n  \"role\": \"CLIENT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Test rate limiting on registration endpoint - run this multiple times to trigger rate limit"
          }
        }
      ],
      "description": "Test rate limiting functionality across different endpoints"
    }
  ]
}
